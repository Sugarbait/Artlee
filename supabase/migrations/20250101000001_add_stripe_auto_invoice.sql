-- Migration: Add Stripe Auto-Invoice Columns and Invoice Tracking Table
-- Created: 2025-01-01
-- Purpose: Support automatic monthly invoice generation with Stripe

-- Add columns to user_settings table for Stripe auto-invoice configuration
ALTER TABLE user_settings
ADD COLUMN IF NOT EXISTS stripe_auto_invoice_enabled BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS stripe_customer_email TEXT,
ADD COLUMN IF NOT EXISTS stripe_customer_name TEXT,
ADD COLUMN IF NOT EXISTS stripe_auto_invoice_last_check TIMESTAMPTZ,
ADD COLUMN IF NOT EXISTS stripe_auto_invoice_last_run TIMESTAMPTZ;

-- Create invoice_history table for tracking generated invoices
CREATE TABLE IF NOT EXISTS invoice_history (
  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
  user_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  invoice_id TEXT NOT NULL, -- Stripe invoice ID
  customer_id TEXT NOT NULL, -- Stripe customer ID
  customer_email TEXT NOT NULL,
  customer_name TEXT NOT NULL,

  -- Invoice period
  period_start DATE NOT NULL,
  period_end DATE NOT NULL,
  invoice_month TEXT NOT NULL, -- e.g., "2024-12" for easy querying

  -- Cost breakdown
  call_count INTEGER DEFAULT 0,
  call_cost_cad DECIMAL(10, 4) DEFAULT 0,
  sms_count INTEGER DEFAULT 0,
  sms_segments INTEGER DEFAULT 0,
  sms_cost_cad DECIMAL(10, 4) DEFAULT 0,
  total_cost_cad DECIMAL(10, 4) NOT NULL,

  -- Invoice status
  invoice_status TEXT NOT NULL DEFAULT 'draft', -- draft, finalized, sent, paid, failed
  invoice_url TEXT,

  -- Generation details
  generated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  sent_at TIMESTAMPTZ,
  paid_at TIMESTAMPTZ,

  -- Retry tracking
  retry_count INTEGER DEFAULT 0,
  last_retry_at TIMESTAMPTZ,
  error_message TEXT,

  -- Automatic vs manual
  generated_automatically BOOLEAN DEFAULT FALSE,

  -- Metadata
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for performance
CREATE INDEX IF NOT EXISTS idx_invoice_history_user_id ON invoice_history(user_id);
CREATE INDEX IF NOT EXISTS idx_invoice_history_invoice_month ON invoice_history(invoice_month);
CREATE INDEX IF NOT EXISTS idx_invoice_history_generated_at ON invoice_history(generated_at);
CREATE INDEX IF NOT EXISTS idx_invoice_history_status ON invoice_history(invoice_status);
CREATE INDEX IF NOT EXISTS idx_invoice_history_auto ON invoice_history(generated_automatically);

-- Add unique constraint to prevent duplicate invoices for same period
CREATE UNIQUE INDEX IF NOT EXISTS idx_invoice_history_unique_period
ON invoice_history(user_id, invoice_month, generated_automatically);

-- Enable Row Level Security
ALTER TABLE invoice_history ENABLE ROW LEVEL SECURITY;

-- RLS Policy: Users can only see their own invoices
CREATE POLICY "Users can view own invoices"
  ON invoice_history
  FOR SELECT
  USING (auth.uid() = user_id);

-- RLS Policy: System can insert invoices (for cron job)
CREATE POLICY "System can insert invoices"
  ON invoice_history
  FOR INSERT
  WITH CHECK (true); -- Cron job will use service role

-- RLS Policy: System can update invoices (for retries and status changes)
CREATE POLICY "System can update invoices"
  ON invoice_history
  FOR UPDATE
  USING (true); -- Cron job will use service role

-- Add comments for documentation
COMMENT ON TABLE invoice_history IS 'Tracks all Stripe invoices generated by the system (manual and automatic)';
COMMENT ON COLUMN invoice_history.invoice_month IS 'Format: YYYY-MM. Used for preventing duplicate invoices and querying';
COMMENT ON COLUMN invoice_history.retry_count IS 'Number of retry attempts for failed invoice generation (max 3)';
COMMENT ON COLUMN invoice_history.generated_automatically IS 'TRUE if generated by cron/auto-system, FALSE if manually generated';

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_invoice_history_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger to automatically update updated_at
CREATE TRIGGER trigger_invoice_history_updated_at
  BEFORE UPDATE ON invoice_history
  FOR EACH ROW
  EXECUTE FUNCTION update_invoice_history_updated_at();
